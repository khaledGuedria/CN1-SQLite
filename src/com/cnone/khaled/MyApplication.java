package com.cnone.khaled;

import com.codename1.db.Cursor;
import com.codename1.db.Database;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.FontImage;
import com.codename1.ui.TextField;


/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MyApplication {

    //var
    private Form current;
    private Resources theme;
    //..
    Database db;
    boolean created = false;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }

        //FORM 1
        Form f = new Form("Add Task", BoxLayout.y());

        //Components
        TextField taskNameTF = new TextField("", "TO DO");
        TextField taskDeadlineTF = new TextField("", "Deadline");
        Button addBtn = new Button("Add Task");
        Button showBtn = new Button("Show Tasks");

        //DB CREATION
        //..........................................................
        created = Database.exists("3A");
        try {
            db = Database.openOrCreate("3A");
            
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        
        if(created == false){
            try {
                db.execute("CREATE TABLE task (name TEXT, deadline TEXT)");
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        //..........................................................

        //actions
        addBtn.addActionListener((evt) -> {
            
            //1 : request
            String req = "INSERT INTO task (name, deadline) values ('"
                   + taskNameTF.getText() + "', '"
                   + taskDeadlineTF.getText() + "')";
            
            try {
                db.execute(req);
                Dialog.show("Success", "Task added succesfully!", "OK", null);
                
            } catch (IOException ex) {
                ex.printStackTrace();
            }

        });
        //..
        showBtn.addActionListener((evt2) -> {
            
            Form f2 = new Form("Tasks", BoxLayout.y());
            f2.getToolbar().addMaterialCommandToLeftBar("", FontImage.MATERIAL_ARROW_BACK, (e) -> {
            
                 f.showBack();
            
            });
            
            //request
            String req = "SELECT * FROM task";
            
            try {
                Cursor c = db.executeQuery(req);
                while (c.next()) {                    
                    f2.add(new Label(c.getRow().getString(1) + " : " + c.getRow().getString(0)));
                }
                
            } catch (IOException ex) {
                ex.printStackTrace();
            }
            
            
            f2.show();

        });

        f.addAll(taskNameTF, taskDeadlineTF, addBtn, showBtn);
        f.show();
    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

}
